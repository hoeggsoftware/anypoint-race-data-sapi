<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns:validation="http://www.mulesoft.org/schema/mule/validation" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:redis="http://www.mulesoft.org/schema/mule/redis"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/redis http://www.mulesoft.org/schema/mule/redis/current/mule-redis.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/validation http://www.mulesoft.org/schema/mule/validation/current/mule-validation.xsd">
	<flow name="getRace" doc:id="5c72e95d-d18a-45f1-9741-c843e40bbd51" >
		<choice doc:name="Choice" doc:id="cc2ee38e-a5b9-4fe7-96af-31ac6a5fa889" >
			<when expression='#[vars.raceType == "legacy"]'>
				<set-variable value='#["race:$(vars.raceId)"]' doc:name="raceKey" doc:id="379735b4-fa5b-4b4f-a0cc-44a70b7d8e53" variableName="raceKey"/>
				<redis:get doc:name="raceKey" doc:id="8def59a5-efc0-4758-8f88-3ca7611aed5a" config-ref="redisConfig" key="#[vars.raceKey]" />
				<logger level="DEBUG" doc:name="DEBUG" doc:id="acb7e23c-a9a4-4257-8d42-b9adeef347c2" message="#[payload]" category="race-data-sapi.getRace.legacy"/>
				<raise-error doc:name="APP:NOT_SUPPORTED_YET" doc:id="935a2d63-31e5-4f70-80f7-d594cf217670" type="APP:NOT_SUPPORTED_YET" description="unsupported legacy race data requested"/>
			</when>
			<otherwise >
				<set-variable value='#["race:$(vars.raceType):$(vars.raceId)"]' doc:name="raceKey" doc:id="482e2904-b5fd-4fc5-b07d-a93397363465" variableName="raceKey" />
				<logger level="DEBUG" doc:name="DEBUG" doc:id="95e10b0a-d8d5-442c-98a2-2e6b88a7dfb8" message="race key: #[vars.raceKey]" category="race-data-sapi.getRace"/>
				<redis:get-all-from-hash doc:name="raceKey" doc:id="d731132b-b59f-4b91-8a42-179d2f4adce3" config-ref="redisConfig" key="#[vars.raceKey]"/>
				<logger level="DEBUG" doc:name="DEBUG" doc:id="98827bf1-8dac-4924-a99a-f635bd93e291" message="results: #[output application/json --- payload]" category="race-data-sapi.getRace"/>
				<validation:is-false doc:name="empty payload" doc:id="f74bc9ed-dbaf-4b34-802b-bdfb0fa38632" expression="#[isEmpty(payload)]" message='#["$(vars.raceKey) not found"]'>
					<error-mapping sourceType="VALIDATION:INVALID_BOOLEAN" targetType="APP:NOT_FOUND" />
				</validation:is-false>
				<ee:transform doc:name="to Race" doc:id="8c0b40ce-8890-4904-87ef-40dd39dcd7d0">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
import * from dw::app::Transforms
output application/json
---
{
	racerId: payload.racerid,
	raceId: payload.raceid,
	start: fromRedisDate(payload.start),
	(finish: fromRedisDate(payload.finish)) if payload.finish?,
	(token: payload.token) if payload.token?,
	(lap: {
		count: payload.lapcount,
		start: fromRedisDate(payload.lapstart),
		(finish: fromRedisDate(payload.lapfinish)) if payload.lapfinish?
	}) if payload.lapcount?,
	(data: read(payload.data!, "application/json")) if payload.data?
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</otherwise>
		</choice>
		<error-handler >
			<on-error-propagate enableNotifications="true" logException="false" doc:name="On Error Propagate" doc:id="b689e8a5-e82f-45d0-902c-d3800aa1a3b6" />
		</error-handler>
	</flow>
	<flow name="setRace" doc:id="1e49818a-7246-43b9-a2f5-70fdbde1a777" >
		<validation:is-false doc:name="raceType = legacy" doc:id="d13f65ec-116b-452b-8df9-60f21c709acf" expression='#[vars.raceType == "legacy"]' message="Legacy races are read only">
			<error-mapping targetType="APP:FORBIDDEN" />
		</validation:is-false>
		<set-variable value='#["race:$(vars.raceType):$(vars.raceId)"]' doc:name="raceKey" doc:id="f48ae467-85f9-48ac-87f5-4fc846c99c61" variableName="raceKey" />
		<ee:transform doc:name="to hash field array" doc:id="ddcb4385-0dcd-4d92-acf8-62e07f381002" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
import * from dw::app::Transforms

output application/json
---
{
	racerid: payload.racerId,
	raceid: payload.raceId,
	(token: payload.token) if payload.token?,
	start: toRedisDate(payload.start),
	(finish: toRedisDate(payload.finish)) if payload.finish?,
	(lapcount: payload.lap.count) if payload.lap?,
	(lapstart: toRedisDate(payload.lap.start)) if payload.lap?,
	(lapfinish: toRedisDate(payload.lap.finish)) if payload.lap.finish?,
	(data: write(payload.data, "application/json")) if payload.data?
} pluck (value, field) -> {field: field, value: value}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<parallel-foreach doc:name="Parallel For Each" doc:id="90682b0c-cdbb-4ce5-9a1c-cd874e3a1ab5" >
			<redis:set-in-hash doc:name="raceKey" doc:id="b57172c1-5f24-4753-a0a3-ff7a48f978c0" config-ref="redisConfig" key="#[vars.raceKey]" field="#[payload.field]">
				<redis:value ><![CDATA[#[payload.value]]]></redis:value>
			</redis:set-in-hash>
		</parallel-foreach>
		<set-payload value="OK" doc:name="OK" doc:id="d27b2cfb-50f5-4646-9809-44af8641d139" />
		<error-handler >
			<on-error-propagate enableNotifications="true" logException="false" doc:name="On Error Propagate" doc:id="67a28bd1-6d6d-4d0f-99b7-214406561fe9" />
		</error-handler>
	</flow>
</mule>
