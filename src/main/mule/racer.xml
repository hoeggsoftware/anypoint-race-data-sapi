<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:validation="http://www.mulesoft.org/schema/mule/validation"
	xmlns:redis="http://www.mulesoft.org/schema/mule/redis" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/redis http://www.mulesoft.org/schema/mule/redis/current/mule-redis.xsd
http://www.mulesoft.org/schema/mule/validation http://www.mulesoft.org/schema/mule/validation/current/mule-validation.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd">
	<flow name="createRacer" doc:id="c7ff3e7b-0818-470c-a5b8-22f131e32aab" >
		<redis:get doc:name="racerid" doc:id="6fb44077-d10d-47a8-b2ef-3f593a71d634" config-ref="redisConfig" key='#["racerid:$(payload.clientId)"]' target="racerId"/>
		<choice doc:name="Choice" doc:id="7d9d698a-571f-49e0-8a94-d236d1cfdb6a" >
			<when expression="#[isEmpty(vars.racerId)]">
				<set-variable value="#[uuid()]" doc:name="racerId" doc:id="ebb1fe37-d5ca-4380-aae3-4d1d320e1cb3" variableName="racerId"/>
				<redis:set doc:name="racerId" doc:id="4d1714e2-147b-4d3b-8f99-61c3e548ede0" target="setRacerIdResult" config-ref="redisConfig" key='#["racerid:$(payload.clientId)"]' ifNotExists="true"/>
				<set-variable value="#[now()]" doc:name="created" doc:id="c8a89423-5af0-41f6-86cd-887c54e430fe" variableName="created"/>
			</when>
			<otherwise >
				<logger level="DEBUG" doc:name="DEBUG" doc:id="1b864dbd-6259-4835-ae89-fcf2cc9694fb" category="race-data-sapi.createRacer" message="found existing racer ID #[vars.racerId]"/>
			</otherwise>
		</choice>
		<ee:transform doc:name="to hash field array" doc:id="9752fe64-9bfc-419e-bfdb-48679784da64" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="hashFieldArray" ><![CDATA[%dw 2.0
import * from dw::app::Transforms
output application/json
---
{
	name: payload.displayName,
	email: payload.email,
	racerId: vars.racerId,
	clientId: payload.clientId,
	(created: toRedisDate(vars.created)) if vars.created?
} pluck (value, field) -> {field: field, value: value}]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<logger level="DEBUG" doc:name="DEBUG" doc:id="2d72c9e0-b904-4783-81f7-181d8cae7803" message="#[payload]" category="race-data-sapi.createRacer"/>
		<parallel-foreach doc:name="Parallel For Each" doc:id="6fd31d9b-e7e9-4991-a7cf-7b3d1eba7f92" target="hsetResult" collection="#[vars.hashFieldArray]">
			<redis:set-in-hash doc:name="racerprofile" doc:id="f9d489d9-8fe3-4f74-b71d-74ae6f5dc672" config-ref="redisConfig" key='#["racerprofile:$(vars.racerId)"]' field="#[payload.field]">
				<redis:value ><![CDATA[#[payload.value]]]></redis:value>
			</redis:set-in-hash>
		</parallel-foreach>
		<ee:transform doc:name="response" doc:id="188ef256-877a-47bf-89a6-5af3078b23b4" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload ++ {
	racerId: vars.racerId
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
	<flow name="getRacer" doc:id="fe9eb56e-0b7b-4776-8783-1e3be2bd9836" >
		<redis:get-all-from-hash doc:name="Get all from hash" doc:id="09e6f5ff-be6d-4821-8b3f-9a4fe93df4ad" config-ref="redisConfig" key='#["racerprofile:$(vars.racerId)"]'/>
		<validation:is-true doc:name="not empty object" doc:id="2eeee3dd-7c9b-4956-b7ab-185b5fc2a8db" expression="#[payload != {}]" message="no such racer #[vars.racerId]">
			<error-mapping sourceType="VALIDATION:INVALID_BOOLEAN" targetType="APP:NO_RACER_DATA" />
		</validation:is-true>
		<ee:transform doc:name="Transform Message" doc:id="d1d9b36c-1415-431a-af15-4c6db768b102" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<error-handler >
			<on-error-continue enableNotifications="true" logException="false" doc:name="On Error Continue" doc:id="68efcba8-a37f-4a10-a91c-5a9911a6ee6e" type="APP:NO_RACER_DATA">
				<logger level="WARN" doc:name="WARN" doc:id="233b5471-b196-4045-a56b-d29bb26479b6" message="Racer #[vars.racerId] not found" category="race-data-sapi.getRacer"/>
				<set-variable value="404" doc:name="httpStatus = 404" doc:id="ae4299c5-5f3c-4519-b0a8-1958d44d9e65" variableName="httpStatus"/>
				<set-payload value='#[""]' doc:name="Clear Payload" doc:id="d46f9191-3d2b-4e3b-9f46-dca86e44b946" />
			</on-error-continue>
		</error-handler>
	</flow>
	<sub-flow name="searchRacersByClientId" doc:id="dded6f18-2455-4389-99fe-e3f264081eb4" >
		<redis:get doc:name="racerid" doc:id="da5e7b85-8e8d-4e02-ad94-c25649305379" config-ref="redisConfig" key='#["racerid:$(vars.clientId)"]'/>
		<ee:transform doc:name="response" doc:id="0c9e5b89-38d8-410e-bf0f-6dc43dd87cde" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
if (payload == null) []
else [{racerId: payload}]]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</sub-flow>
	<sub-flow name="updateRacer" doc:id="15480212-7475-460b-a896-cf1a1c8569a3" >
		<ee:transform doc:name="to hash field array" doc:id="cf4b4b53-6f5a-4c49-a43c-f1006e2134fa" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="hashFieldArray" ><![CDATA[%dw 2.0
import * from dw::app::Transforms
output application/json
---
{
	name: payload.displayName,
	email: payload.email,
	racerId: vars.racerId
} pluck (value, field) -> {field: field, value: value}]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<logger level="DEBUG" doc:name="DEBUG" doc:id="152832f5-ac1f-4f3f-84ea-cde4eb7a2bdd" category="race-data-sapi.updateRacer" message="#[payload]"/>
		<parallel-foreach doc:name="Parallel For Each" doc:id="bcfa17d9-8784-42e5-9e68-38bfe3242132" collection="#[vars.hashFieldArray]" target="hsetResult">
			<redis:set-in-hash doc:name="racerprofile" doc:id="67cb121c-c1e7-418e-8f61-3be62e8e2b87" config-ref="redisConfig" key='#["racerprofile:$(vars.racerId)"]' field="#[payload.field]">
				<redis:value ><![CDATA[#[payload.value]]]></redis:value>
			</redis:set-in-hash>
		</parallel-foreach>
	</sub-flow>
</mule>
